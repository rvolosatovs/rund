// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.14.0
// source: api/api.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type JobIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// ulid uniquely identifies a process started by JobController.
	Ulid string `protobuf:"bytes,1,opt,name=ulid,proto3" json:"ulid,omitempty"`
}

func (x *JobIdentifier) Reset() {
	*x = JobIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobIdentifier) ProtoMessage() {}

func (x *JobIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobIdentifier.ProtoReflect.Descriptor instead.
func (*JobIdentifier) Descriptor() ([]byte, []int) {
	return file_api_api_proto_rawDescGZIP(), []int{0}
}

func (x *JobIdentifier) GetUlid() string {
	if x != nil {
		return x.Ulid
	}
	return ""
}

type JobLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Stdout []byte `protobuf:"bytes,1,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr []byte `protobuf:"bytes,2,opt,name=stderr,proto3" json:"stderr,omitempty"`
}

func (x *JobLog) Reset() {
	*x = JobLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobLog) ProtoMessage() {}

func (x *JobLog) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobLog.ProtoReflect.Descriptor instead.
func (*JobLog) Descriptor() ([]byte, []int) {
	return file_api_api_proto_rawDescGZIP(), []int{1}
}

func (x *JobLog) GetStdout() []byte {
	if x != nil {
		return x.Stdout
	}
	return nil
}

func (x *JobLog) GetStderr() []byte {
	if x != nil {
		return x.Stderr
	}
	return nil
}

type JobStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether the job has been stopped via `Stop` RPC.
	Stopped bool `protobuf:"varint,1,opt,name=stopped,proto3" json:"stopped,omitempty"`
	// Whether the job has been killed.
	Killed bool `protobuf:"varint,2,opt,name=killed,proto3" json:"killed,omitempty"`
	// Exit code of the process, if not set - the process is still running.
	ExitCode *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	// CPU user time with microsecond precision.
	UserTime *durationpb.Duration `protobuf:"bytes,4,opt,name=user_time,json=userTime,proto3" json:"user_time,omitempty"`
	// CPU system time with microsecond precision.
	SystemTime *durationpb.Duration `protobuf:"bytes,5,opt,name=system_time,json=systemTime,proto3" json:"system_time,omitempty"`
	// The total amount of memory currently being used by the job cgroup and its descendants in bytes.
	MemoryCurrent uint64 `protobuf:"varint,6,opt,name=memory_current,json=memoryCurrent,proto3" json:"memory_current,omitempty"`
}

func (x *JobStatus) Reset() {
	*x = JobStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatus) ProtoMessage() {}

func (x *JobStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatus.ProtoReflect.Descriptor instead.
func (*JobStatus) Descriptor() ([]byte, []int) {
	return file_api_api_proto_rawDescGZIP(), []int{2}
}

func (x *JobStatus) GetStopped() bool {
	if x != nil {
		return x.Stopped
	}
	return false
}

func (x *JobStatus) GetKilled() bool {
	if x != nil {
		return x.Killed
	}
	return false
}

func (x *JobStatus) GetExitCode() *wrapperspb.UInt32Value {
	if x != nil {
		return x.ExitCode
	}
	return nil
}

func (x *JobStatus) GetUserTime() *durationpb.Duration {
	if x != nil {
		return x.UserTime
	}
	return nil
}

func (x *JobStatus) GetSystemTime() *durationpb.Duration {
	if x != nil {
		return x.SystemTime
	}
	return nil
}

func (x *JobStatus) GetMemoryCurrent() uint64 {
	if x != nil {
		return x.MemoryCurrent
	}
	return 0
}

type JobStartRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Command name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional command arguments.
	Args []string `protobuf:"bytes,2,rep,name=args,proto3" json:"args,omitempty"`
	// The maximum bandwidth limit, which indicates how many time units the job may consume out of 100000.
	MaxCpuBandwidth *wrapperspb.UInt32Value `protobuf:"bytes,3,opt,name=max_cpu_bandwidth,json=maxCpuBandwidth,proto3" json:"max_cpu_bandwidth,omitempty"`
	// Memory usage hard limit in bytes.
	MaxMemoryUsage *wrapperspb.UInt64Value `protobuf:"bytes,4,opt,name=max_memory_usage,json=maxMemoryUsage,proto3" json:"max_memory_usage,omitempty"`
	// Max read bytes per second.
	MaxRbps *wrapperspb.UInt64Value `protobuf:"bytes,5,opt,name=max_rbps,json=maxRbps,proto3" json:"max_rbps,omitempty"`
	// Max write bytes per second.
	MaxWbps *wrapperspb.UInt64Value `protobuf:"bytes,6,opt,name=max_wbps,json=maxWbps,proto3" json:"max_wbps,omitempty"`
	// Max read IO operations per second.
	MaxRiops *wrapperspb.UInt64Value `protobuf:"bytes,7,opt,name=max_riops,json=maxRiops,proto3" json:"max_riops,omitempty"`
	// Max write IO operations per second.
	MaxWiops *wrapperspb.UInt64Value `protobuf:"bytes,8,opt,name=max_wiops,json=maxWiops,proto3" json:"max_wiops,omitempty"`
}

func (x *JobStartRequest) Reset() {
	*x = JobStartRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JobStartRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStartRequest) ProtoMessage() {}

func (x *JobStartRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStartRequest.ProtoReflect.Descriptor instead.
func (*JobStartRequest) Descriptor() ([]byte, []int) {
	return file_api_api_proto_rawDescGZIP(), []int{3}
}

func (x *JobStartRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobStartRequest) GetArgs() []string {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *JobStartRequest) GetMaxCpuBandwidth() *wrapperspb.UInt32Value {
	if x != nil {
		return x.MaxCpuBandwidth
	}
	return nil
}

func (x *JobStartRequest) GetMaxMemoryUsage() *wrapperspb.UInt64Value {
	if x != nil {
		return x.MaxMemoryUsage
	}
	return nil
}

func (x *JobStartRequest) GetMaxRbps() *wrapperspb.UInt64Value {
	if x != nil {
		return x.MaxRbps
	}
	return nil
}

func (x *JobStartRequest) GetMaxWbps() *wrapperspb.UInt64Value {
	if x != nil {
		return x.MaxWbps
	}
	return nil
}

func (x *JobStartRequest) GetMaxRiops() *wrapperspb.UInt64Value {
	if x != nil {
		return x.MaxRiops
	}
	return nil
}

func (x *JobStartRequest) GetMaxWiops() *wrapperspb.UInt64Value {
	if x != nil {
		return x.MaxWiops
	}
	return nil
}

var File_api_api_proto protoreflect.FileDescriptor

var file_api_api_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x04, 0x72, 0x75, 0x6e, 0x64, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6c, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6c, 0x69, 0x64, 0x22, 0x38, 0x0a, 0x06, 0x4a, 0x6f,
	0x62, 0x4c, 0x6f, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x74,
	0x64, 0x65, 0x72, 0x72, 0x22, 0x93, 0x02, 0x0a, 0x09, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x6f, 0x70, 0x70, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6b, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6b, 0x69,
	0x6c, 0x6c, 0x65, 0x64, 0x12, 0x39, 0x0a, 0x09, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x65, 0x78, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x36, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xb3, 0x03, 0x0a, 0x0f, 0x4a,
	0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x48, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x5f, 0x63, 0x70,
	0x75, 0x5f, 0x62, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52,
	0x0f, 0x6d, 0x61, 0x78, 0x43, 0x70, 0x75, 0x42, 0x61, 0x6e, 0x64, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x12, 0x46, 0x0a, 0x10, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x5f, 0x75,
	0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0e, 0x6d, 0x61, 0x78, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x55, 0x73, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f,
	0x72, 0x62, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e,
	0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x52, 0x62, 0x70,
	0x73, 0x12, 0x37, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x62, 0x70, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x57, 0x62, 0x70, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x6d, 0x61,
	0x78, 0x5f, 0x72, 0x69, 0x6f, 0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x55, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x52, 0x69, 0x6f, 0x70, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x77, 0x69, 0x6f,
	0x70, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x55, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x57, 0x69, 0x6f, 0x70, 0x73,
	0x32, 0xce, 0x01, 0x0a, 0x0d, 0x4a, 0x6f, 0x62, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x6c,
	0x65, 0x72, 0x12, 0x33, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x72, 0x75,
	0x6e, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x13, 0x2e, 0x72, 0x75, 0x6e, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x53, 0x74, 0x6f, 0x70, 0x12,
	0x13, 0x2e, 0x72, 0x75, 0x6e, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x1a, 0x0f, 0x2e, 0x72, 0x75, 0x6e, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x13, 0x2e, 0x72, 0x75, 0x6e, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x1a, 0x0f, 0x2e, 0x72, 0x75, 0x6e, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x03, 0x4c, 0x6f, 0x67, 0x12, 0x13, 0x2e, 0x72,
	0x75, 0x6e, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65,
	0x72, 0x1a, 0x0c, 0x2e, 0x72, 0x75, 0x6e, 0x64, 0x2e, 0x4a, 0x6f, 0x62, 0x4c, 0x6f, 0x67, 0x30,
	0x01, 0x42, 0x24, 0x5a, 0x22, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x72, 0x76, 0x6f, 0x6c, 0x6f, 0x73, 0x61, 0x74, 0x6f, 0x76, 0x73, 0x2f, 0x72, 0x75, 0x6e, 0x64,
	0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_api_proto_rawDescOnce sync.Once
	file_api_api_proto_rawDescData = file_api_api_proto_rawDesc
)

func file_api_api_proto_rawDescGZIP() []byte {
	file_api_api_proto_rawDescOnce.Do(func() {
		file_api_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_api_proto_rawDescData)
	})
	return file_api_api_proto_rawDescData
}

var file_api_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_api_proto_goTypes = []interface{}{
	(*JobIdentifier)(nil),          // 0: rund.JobIdentifier
	(*JobLog)(nil),                 // 1: rund.JobLog
	(*JobStatus)(nil),              // 2: rund.JobStatus
	(*JobStartRequest)(nil),        // 3: rund.JobStartRequest
	(*wrapperspb.UInt32Value)(nil), // 4: google.protobuf.UInt32Value
	(*durationpb.Duration)(nil),    // 5: google.protobuf.Duration
	(*wrapperspb.UInt64Value)(nil), // 6: google.protobuf.UInt64Value
}
var file_api_api_proto_depIdxs = []int32{
	4,  // 0: rund.JobStatus.exit_code:type_name -> google.protobuf.UInt32Value
	5,  // 1: rund.JobStatus.user_time:type_name -> google.protobuf.Duration
	5,  // 2: rund.JobStatus.system_time:type_name -> google.protobuf.Duration
	4,  // 3: rund.JobStartRequest.max_cpu_bandwidth:type_name -> google.protobuf.UInt32Value
	6,  // 4: rund.JobStartRequest.max_memory_usage:type_name -> google.protobuf.UInt64Value
	6,  // 5: rund.JobStartRequest.max_rbps:type_name -> google.protobuf.UInt64Value
	6,  // 6: rund.JobStartRequest.max_wbps:type_name -> google.protobuf.UInt64Value
	6,  // 7: rund.JobStartRequest.max_riops:type_name -> google.protobuf.UInt64Value
	6,  // 8: rund.JobStartRequest.max_wiops:type_name -> google.protobuf.UInt64Value
	3,  // 9: rund.JobController.Start:input_type -> rund.JobStartRequest
	0,  // 10: rund.JobController.Stop:input_type -> rund.JobIdentifier
	0,  // 11: rund.JobController.Status:input_type -> rund.JobIdentifier
	0,  // 12: rund.JobController.Log:input_type -> rund.JobIdentifier
	0,  // 13: rund.JobController.Start:output_type -> rund.JobIdentifier
	2,  // 14: rund.JobController.Stop:output_type -> rund.JobStatus
	2,  // 15: rund.JobController.Status:output_type -> rund.JobStatus
	1,  // 16: rund.JobController.Log:output_type -> rund.JobLog
	13, // [13:17] is the sub-list for method output_type
	9,  // [9:13] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_api_api_proto_init() }
func file_api_api_proto_init() {
	if File_api_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JobStartRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_api_proto_goTypes,
		DependencyIndexes: file_api_api_proto_depIdxs,
		MessageInfos:      file_api_api_proto_msgTypes,
	}.Build()
	File_api_api_proto = out.File
	file_api_api_proto_rawDesc = nil
	file_api_api_proto_goTypes = nil
	file_api_api_proto_depIdxs = nil
}
